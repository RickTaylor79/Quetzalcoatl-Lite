/** Autogenerated Main.cpp. */

// ============================| Include only the DSP files  |============================

#include <AppConfig.h>
#include <hi_dsp_library/hi_dsp_library.h>
#include <hi_faust/hi_faust.h>
#include "includes.h"
// ======================| Now we can add the rest of the codebase |======================

#include <JuceHeader.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreturn-type-c-linkage"

// ==================================| Project Factory |==================================

namespace project
{

struct Factory: public scriptnode::dll::StaticLibraryHostFactory
{
	Factory()
	{
		TempoSyncer::initTempoData();
		// Node registrations -----------------------------------------------------------
		
		registerPolyNode<project::polymod<1>, project::polymod<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade1<1>, project::xfade1<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade2<1>, project::xfade2<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade3<1>, project::xfade3<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade4<1>, project::xfade4<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade5<1>, project::xfade5<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade6<1>, project::xfade6<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade7<1>, project::xfade7<NUM_POLYPHONIC_VOICES>>();
		registerPolyNode<project::xfade8<1>, project::xfade8<NUM_POLYPHONIC_VOICES>>();
		registerDataNode<project::polymod_networkdata>();
		registerDataNode<project::Arranged_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::env_networkdata>();
		registerDataNode<project::FilterMod_networkdata>();
		registerDataNode<project::FilterMod2_networkdata>();
		registerDataNode<project::FilterMod3_networkdata>();
		registerDataNode<project::FilterMod4_networkdata>();
		registerDataNode<project::FilterMod5_networkdata>();
		registerDataNode<project::FilterMod6_networkdata>();
		registerDataNode<project::FilterMod7_networkdata>();
		registerDataNode<project::FilterMod8_networkdata>();
		registerDataNode<project::FilterSliders_networkdata>();
		registerDataNode<project::FmGainGmod_networkdata>();
		registerDataNode<project::FmHarm_networkdata>();
		registerDataNode<project::FmIn_networkdata>();
		registerDataNode<project::Pitch1_networkdata>();
		registerDataNode<project::FmMod_networkdata>();
		registerDataNode<project::FMout_networkdata>();
		registerDataNode<project::FPTest_networkdata>();
		registerDataNode<project::GainMod_networkdata>();
		registerDataNode<project::gate_networkdata>();
		registerDataNode<project::gmin_networkdata>();
		registerDataNode<project::gmmod_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::HarmMod_networkdata>();
		registerDataNode<project::in1_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::knob_networkdata>();
		registerDataNode<project::Midis_networkdata>();
		registerDataNode<project::mtest_networkdata>();
		registerDataNode<project::O2Slliders_networkdata>();
		registerDataNode<project::osc2wav_networkdata>();
		registerDataNode<project::out_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::pan_networkdata>();
		registerDataNode<project::pan2_networkdata>();
		registerDataNode<project::pan3_networkdata>();
		registerDataNode<project::pan4_networkdata>();
		registerDataNode<project::pan5_networkdata>();
		registerDataNode<project::pan6_networkdata>();
		registerDataNode<project::pan7_networkdata>();
		registerDataNode<project::pan8_networkdata>();
		registerDataNode<project::PanSliders_networkdata>();
		registerDataNode<project::pitcch_networkdata>();
		registerDataNode<project::pitcharray_networkdata>();
		registerDataNode<project::pitcher_networkdata>();
		registerDataNode<project::PitchHarm_networkdata>();
		registerDataNode<project::PitchHarm1_networkdata>();
		registerDataNode<project::pitchin1_networkdata>();
		registerDataNode<project::pmod_networkdata>();
		registerDataNode<project::polymod3_networkdata>();
		registerDataNode<project::pp10_networkdata>();
		registerDataNode<project::pp15_networkdata>();
		registerDataNode<project::PSliders_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::ptttest_networkdata>();
		registerDataNode<project::SampAharm1_networkdata>();
		registerDataNode<project::SampAharm2_networkdata>();
		registerDataNode<project::SampAharm3_networkdata>();
		registerDataNode<project::SampAharm4_networkdata>();
		registerDataNode<project::SampAharm5_networkdata>();
		registerDataNode<project::SampAharm6_networkdata>();
		registerDataNode<project::SampAharm7_networkdata>();
		registerDataNode<project::SampAharm8_networkdata>();
		registerDataNode<project::SampBharm_networkdata>();
		registerDataNode<project::SampBharm1_networkdata>();
		registerDataNode<project::SampBharm2_networkdata>();
		registerDataNode<project::SampBharm3_networkdata>();
		registerDataNode<project::SampBharm4_networkdata>();
		registerDataNode<project::SampBharm5_networkdata>();
		registerDataNode<project::SampBharm6_networkdata>();
		registerDataNode<project::SampBharm7_networkdata>();
		registerDataNode<project::SampBharm8_networkdata>();
		registerDataNode<project::Send1_networkdata>();
		registerDataNode<project::send2_networkdata>();
		registerDataNode<project::sfz_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::Switcher_networkdata>();
		registerDataNode<project::TableTest_networkdata>();
		registerDataNode<project::_networkdata>();
		registerDataNode<project::w4_networkdata>();
		registerDataNode<project::Wt1_networkdata>();
		registerDataNode<project::wt2_networkdata>();
		registerDataNode<project::wt3_networkdata>();
		registerDataNode<project::wt5_networkdata>();
		registerDataNode<project::wt6_networkdata>();
		registerDataNode<project::wt7_networkdata>();
		registerDataNode<project::wt8_networkdata>();
		registerDataNode<project::WtGmodA1_networkdata>();
		registerDataNode<project::WtMod1_networkdata>();
		registerDataNode<project::WtMod2_networkdata>();
		registerDataNode<project::WtMod3_networkdata>();
		registerDataNode<project::WtMod4_networkdata>();
		registerDataNode<project::WtMod5_networkdata>();
		registerDataNode<project::WtMod6_networkdata>();
		registerDataNode<project::WtMod7_networkdata>();
		registerDataNode<project::WtMod8_networkdata>();
		registerDataNode<project::WtModB_networkdata>();
		registerDataNode<project::WtSliders_networkdata>();
		registerDataNode<project::XF1_networkdata>();
		registerDataNode<project::XF2_networkdata>();
		registerDataNode<project::XF3_networkdata>();
		registerDataNode<project::XF4_networkdata>();
		registerDataNode<project::XF5_networkdata>();
		registerDataNode<project::XF6_networkdata>();
		registerDataNode<project::XF7_networkdata>();
		registerDataNode<project::XF8_networkdata>();
	}
};
}

scriptnode::dll::FactoryBase* scriptnode::DspNetwork::createStaticFactory()
{
	return new project::Factory();
}

#pragma clang diagnostic pop


